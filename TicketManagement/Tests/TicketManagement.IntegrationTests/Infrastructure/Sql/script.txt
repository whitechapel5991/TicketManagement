USE [master]

IF DB_ID (N'TicketManagementTest') IS NOT NULL
ALTER DATABASE TicketManagementTest SET SINGLE_USER WITH ROLLBACK IMMEDIATE DROP DATABASE TicketManagementTest;

CREATE DATABASE [TicketManagementTest]

USE [TicketManagementTest]

CREATE TABLE [dbo].[Areas](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[LayoutId] [int] NOT NULL,
	[Description] [nvarchar](200) NOT NULL,
	[CoordX] [int] NOT NULL,
	[CoordY] [int] NOT NULL,
PRIMARY KEY CLUSTERED
(
	[Id] ASC
))

CREATE TABLE [dbo].[Events](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Name] [nvarchar](120) NOT NULL,
	[Description] [nvarchar](max) NOT NULL,
	[LayoutId] [int] NOT NULL,
	[BeginDate] [datetime] NOT NULL,
	[EndDate] [datetime] NOT NULL,
PRIMARY KEY CLUSTERED
(
	[Id] ASC
))

CREATE TABLE [dbo].[EventAreas](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[EventId] [int] NOT NULL,
	[Description] [nvarchar](200) NOT NULL,
	[CoordX] [int] NOT NULL,
	[CoordY] [int] NOT NULL,
	[Price] [decimal](18, 2) NULL,
PRIMARY KEY CLUSTERED
(
	[Id] ASC
))


CREATE TABLE [dbo].[EventSeats](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[EventAreaId] [int] NOT NULL,
	[Row] [int] NOT NULL,
	[Number] [int] NOT NULL,
	[State] [int] NULL,
PRIMARY KEY CLUSTERED
(
	[Id] ASC
))

CREATE TABLE [dbo].[Layouts](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[VenueId] [int] NOT NULL,
	[Description] [nvarchar](120) NOT NULL,
	[Name] [nvarchar](50) NOT NULL,
PRIMARY KEY CLUSTERED
(
	[Id] ASC
))

CREATE TABLE [dbo].[Seats](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[AreaId] [int] NOT NULL,
	[Row] [int] NOT NULL,
	[Number] [int] NOT NULL,
PRIMARY KEY CLUSTERED
(
	[Id] ASC
))

CREATE TABLE [dbo].[Venues](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Description] [nvarchar](120) NOT NULL,
	[Address] [nvarchar](200) NOT NULL,
	[Phone] [nvarchar](30) NULL,
	[Name] [nvarchar](50) NULL,
PRIMARY KEY CLUSTERED
(
	[Id] ASC
))

ALTER TABLE [dbo].[Areas]  WITH CHECK ADD  CONSTRAINT [FK_Layouts_Areas] FOREIGN KEY([LayoutId])
REFERENCES [dbo].[Layouts] ([Id]) ON DELETE CASCADE

ALTER TABLE [dbo].[Areas] CHECK CONSTRAINT [FK_Layouts_Areas]

ALTER TABLE [dbo].[Events]  WITH CHECK ADD  CONSTRAINT [FK_Layouts_Events] FOREIGN KEY([LayoutId])
REFERENCES [dbo].[Layouts] ([Id]) ON DELETE CASCADE

ALTER TABLE [dbo].[Events] CHECK CONSTRAINT [FK_Layouts_Events]

ALTER TABLE [dbo].[EventAreas]  WITH CHECK ADD  CONSTRAINT [FK_Events_EventAreas] FOREIGN KEY([EventId])
REFERENCES [dbo].[Events] ([Id]) ON DELETE CASCADE

ALTER TABLE [dbo].[EventAreas] CHECK CONSTRAINT [FK_Events_EventAreas]

ALTER TABLE [dbo].[EventSeats]  WITH CHECK ADD  CONSTRAINT [FK_Areas_EventSeats] FOREIGN KEY([EventAreaId])
REFERENCES [dbo].[EventAreas] ([Id]) ON DELETE CASCADE

ALTER TABLE [dbo].[EventSeats] CHECK CONSTRAINT [FK_Areas_EventSeats]

ALTER TABLE [dbo].[Layouts]  WITH CHECK ADD  CONSTRAINT [FK_Venues_Layouts] FOREIGN KEY([VenueId])
REFERENCES [dbo].[Venues] ([Id]) ON DELETE CASCADE

ALTER TABLE [dbo].[Layouts] CHECK CONSTRAINT [FK_Venues_Layouts]

ALTER TABLE [dbo].[Seats]  WITH CHECK ADD  CONSTRAINT [FK_Areas_Seats] FOREIGN KEY([AreaId])
REFERENCES [dbo].[Areas] ([Id]) ON DELETE CASCADE

ALTER TABLE [dbo].[Seats] CHECK CONSTRAINT [FK_Areas_Seats]

EXEC('CREATE PROCEDURE [dbo].[DeleteArea]
	@Id int
AS
    delete from [dbo].Areas where Id=@Id
select @@ROWCOUNT')

EXEC('CREATE PROCEDURE [dbo].[DeleteLayout]
	@Id int
AS
    delete from [dbo].Layouts where Id=@Id
select @@ROWCOUNT')

EXEC('CREATE PROCEDURE [dbo].[DeleteSeat]
	@Id int
AS
    delete from [dbo].Seats where Id=@Id
select @@ROWCOUNT')

EXEC('CREATE PROCEDURE [dbo].[DeleteVenue]
		@Id int
AS
    delete from [dbo].Venues where Id=@Id
select @@ROWCOUNT')

EXEC('CREATE PROCEDURE [dbo].[DeleteEvent]
		@Id int
AS
	BEGIN TRAN
    Begin try
		delete from Events where Id=@Id;
 commit tran
    end try
    begin catch
        rollback tran
    end catch')

EXEC('CREATE PROCEDURE [dbo].[DeleteEventArea]
	@Id int
AS
    delete from EventAreas where Id=@Id')

EXEC('CREATE PROCEDURE [dbo].[DeleteEventSeat]
	@Id int
AS
    delete from EventSeats where Id=@Id')

EXEC('CREATE PROCEDURE [dbo].[CreateArea]
	@Description nvarchar(50),
    @CoordX int,
    @CoordY int,
    @LayoutId int
AS
    INSERT INTO Areas (Description, CoordX, CoordY, LayoutId)
    VALUES (@Description, @CoordX, @CoordY, @LayoutId)
    SELECT SCOPE_IDENTITY()')

EXEC('CREATE PROCEDURE [dbo].[CreateLayout]
	@Description nvarchar(50),
    @VenueId int,
	@Name nvarchar(50)
AS
    INSERT INTO Layouts (Description, VenueId, Name)
    VALUES (@Description, @VenueId, @Name)
    SELECT SCOPE_IDENTITY()')

EXEC('CREATE PROCEDURE [dbo].[CreateSeat]
	@Row int,
    @Number int,
    @AreaId int
AS
    INSERT INTO Seats (Row, Number, AreaId)
    VALUES (@Row, @Number, @AreaId)
    SELECT SCOPE_IDENTITY()')

EXEC('CREATE PROCEDURE [dbo].[CreateVenue]
	@Description nvarchar(50),
    @Address nvarchar(50),
    @Phone nvarchar(50),
	@Name nvarchar(50)
AS
    INSERT INTO Venues (Description, Address, Phone, Name)
    VALUES (@Description, @Address, @Phone, @Name)
    SELECT SCOPE_IDENTITY()')

EXEC('CREATE PROCEDURE [dbo].[CreateEvent]
	@Name nvarchar(50),
    @Description nvarchar(50),
    @LayoutId int,
    @BeginDate datetime,
    @EndDate datetime
AS
    declare @AreaTemp table (
    Id int,
    LayoutId int,
    Description nvarchar(200),
    CoordX int,
    CoordY int,
    RowId int not null identity(1,1));

    declare @SeatTemp table (
    Id int,
    AreaId int,
    Row int,
    Number int,
    RowId int not null identity(1,1));

    DECLARE @AreaRows       int
    DECLARE @SeatRows       int
    DECLARE @AreaCurrentRow  int
    DECLARE @SeatCurrentRow  int
    DECLARE @SelectCol1     int

    BEGIN TRAN
    Begin try
        Insert into @AreaTemp (Id, LayoutId, Description, CoordX, CoordY)
        select Id, LayoutId, Description, CoordX, CoordY
        from dbo.Areas
        where LayoutId = @LayoutId;
        set @AreaRows=@@ROWCOUNT;

        Insert into @SeatTemp (Id, AreaId, Row, Number)
        select dbo.Seats.Id, AreaId, Row, Number
        from @AreaTemp
        join dbo.Seats on [@AreaTemp].Id = dbo.Seats.AreaId
        set @SeatRows=@@ROWCOUNT;

        declare @eventId int;
        INSERT INTO Events (Name, Description, LayoutId, BeginDate, EndDate)
        VALUES (@Name, @Description, @LayoutId, @BeginDate, @EndDate)
        set @eventId = SCOPE_IDENTITY();

        set @AreaCurrentRow=0
        while @AreaCurrentRow < @AreaRows
        begin
            set @AreaCurrentRow=@AreaCurrentRow+1
            declare @descriptionParam nvarchar(50), @coordXParam int, @coordYParam int, @priceParam decimal(18,0), @areaIdParam int, @eventAreaIdParam int;
            select top 1 @descriptionParam=Description, @coordXParam=CoordX, @coordYParam=CoordY, @areaIdParam=Id
            from @AreaTemp
            where RowId = @AreaCurrentRow;
            set @priceParam = 0;
            exec dbo.CreateEventArea @descriptionParam, @coordXParam, @coordYParam, @priceParam, @eventId, @eventAreaIdParam OUTPUT;



            declare @SeatIdParam int, @RowParam int, @numberParam int, @eventSeatIdOutput int;
            declare Seat_Cursor cursor for
            (select Id, Row, Number
                from @SeatTemp
                where AreaId = @areaIdParam);

            open Seat_Cursor
            FETCH NEXT FROM Seat_Cursor INTO
    @SeatIdParam, @RowParam, @numberParam

            while @@FETCH_STATUS = 0
            begin
                exec dbo.CreateEventSeat @RowParam, @numberParam, 0, @eventAreaIdParam, @eventSeatIdOutput output;

               FETCH NEXT FROM Seat_Cursor INTO
                        @SeatIdParam, @RowParam, @numberParam
            end
            CLOSE Seat_Cursor
            DEALLOCATE Seat_Cursor
        end

        commit tran
        select @eventId
    end try
    begin catch
        return -1
        rollback tran
    end catch')

EXEC('CREATE PROCEDURE [dbo].[CreateEventArea]
	@Description nvarchar(50),
    @CoordX int,
    @CoordY int,
	@Price decimal,
    @EventId int,
    @EventAreaId int Output
AS
    INSERT INTO EventAreas (Description, CoordX, CoordY, Price, EventId)
    VALUES (@Description, @CoordX, @CoordY, @Price, @EventId)
    Set @EventAreaId = SCOPE_IDENTITY()')

EXEC('CREATE PROCEDURE [dbo].[CreateEventSeat]
    @Row int,
    @Number int,
    @State int,
    @EventAreaId int,
    @EventSeatId int Output
AS
    INSERT INTO EventSeats (Row, Number, State, EventAreaId)
    VALUES (@Row, @Number, @State, @EventAreaId)
    set @EventSeatId = SCOPE_IDENTITY()')

EXEC('CREATE PROCEDURE [dbo].[UpdateArea]
	@Id int,
	@Description nvarchar(50),
    @CoordX int,
    @CoordY int,
    @LayoutId int
AS
    UPDATE Areas set Description=@Description, CoordX=@CoordX, CoordY=@CoordY, LayoutId=@LayoutId
	where Id = @Id
select @@ROWCOUNT')

EXEC('CREATE PROCEDURE [dbo].[UpdateLayout]
	@Id int,
	@Description nvarchar(50),
    @VenueId int,
	@Name nvarchar(50)
AS
    UPDATE Layouts set Description=@Description, VenueId=@VenueId, Name=@Name
	where Id = @Id
select @@ROWCOUNT')

EXEC('CREATE PROCEDURE [dbo].[UpdateSeat]
	@Id int,
	@Row nvarchar(50),
    @Number int,
    @AreaId int
AS
    UPDATE Seats set Row=@Row, Number=@Number, AreaId=@AreaId
	where Id = @Id
select @@ROWCOUNT')

EXEC('CREATE PROCEDURE [dbo].[UpdateVenue]
	@Id int,
	@Description nvarchar(50),
    @Address nvarchar(50),
    @Phone nvarchar(50),
	@Name nvarchar(50)
AS
    UPDATE Venues set Description=@Description, Address=@Address, Phone=@Phone, Name=@Name
	where Id = @Id
select @@ROWCOUNT')

EXEC('CREATE PROCEDURE [dbo].[UpdateEvent]
	@Id int,
	@Name nvarchar(50),
    @Description nvarchar(50),
    @LayoutId int,
	@BeginDate datetime,
    @EndDate datetime
AS
 declare @AreaTemp table (
    Id int,
    LayoutId int,
    Description nvarchar(200),
    CoordX int,
    CoordY int,
    RowId int not null identity(1,1));

    declare @SeatTemp table (
    Id int,
    AreaId int,
    Row int,
    Number int,
    RowId int not null identity(1,1));

    DECLARE @AreaRows       int
    DECLARE @SeatRows       int
    DECLARE @AreaCurrentRow  int
    DECLARE @SeatCurrentRow  int
    DECLARE @SelectCol1     int

    BEGIN TRAN
    Begin try
    declare @oldLayoutId int;

    select  @oldLayoutId=LayoutId from Events where Id=@Id;

    if (@LayoutId = @oldLayoutId)
        Begin
            UPDATE Events set Name=@Name, Description=@Description, LayoutId=@LayoutId, BeginDate=@BeginDate, EndDate=@EndDate
	        where Id = @Id
	        select @@ROWCOUNT;
        End
    Else
        Begin
            Insert into @AreaTemp (Id, LayoutId, Description, CoordX, CoordY)
            select Id, LayoutId, Description, CoordX, CoordY
            from dbo.Areas
            where LayoutId = @LayoutId;
            set @AreaRows=@@ROWCOUNT;

            Insert into @SeatTemp (Id, AreaId, Row, Number)
            select dbo.Seats.Id, AreaId, Row, Number
            from @AreaTemp
            join dbo.Seats on [@AreaTemp].Id = dbo.Seats.AreaId
            set @SeatRows=@@ROWCOUNT;

            UPDATE Events set Name=@Name, Description=@Description, LayoutId=@LayoutId, BeginDate=@BeginDate, EndDate=@EndDate
	        where Id = @Id
	        select @@ROWCOUNT;

            set @AreaCurrentRow=0
            while @AreaCurrentRow < @AreaRows
            begin
                set @AreaCurrentRow=@AreaCurrentRow+1
                declare @descriptionParam nvarchar(50), @coordXParam int, @coordYParam int, @priceParam decimal(18,0), @areaIdParam int, @eventAreaIdParam int;
                select top 1 @descriptionParam=Description, @coordXParam=CoordX, @coordYParam=CoordY, @areaIdParam=Id
                from @AreaTemp
                where RowId = @AreaCurrentRow;
                set @priceParam = 0;
                exec dbo.CreateEventArea @descriptionParam, @coordXParam, @coordYParam, @priceParam, @Id, @eventAreaIdParam OUTPUT;



                declare @SeatIdParam int, @RowParam int, @numberParam int;
                declare Seat_Cursor cursor for
                (select Id, Row, Number
                    from @SeatTemp
                    where AreaId = @areaIdParam);

                open Seat_Cursor
                FETCH NEXT FROM Seat_Cursor INTO
        @SeatIdParam, @RowParam, @numberParam

        declare @eventSeatIdOutput int;
            while @@FETCH_STATUS = 0
            begin
                exec dbo.CreateEventSeat @RowParam, @numberParam, 0, @eventAreaIdParam, @eventSeatIdOutput output;

               FETCH NEXT FROM Seat_Cursor INTO
                        @SeatIdParam, @RowParam, @numberParam
            end
            CLOSE Seat_Cursor
DEALLOCATE Seat_Cursor
        end
        End


commit tran
end try
begin catch
return -1
    rollback tran
end catch
')

EXEC('CREATE PROCEDURE [dbo].[UpdateEventArea]
	@Id int,
	@Description nvarchar(50),
    @CoordX int,
    @CoordY int,
	@Price decimal,
    @EventId int
AS
    UPDATE EventAreas set Price=@Price
	where Id = @Id;')

EXEC('CREATE PROCEDURE [dbo].[UpdateEventSeat]
	@Id int,
	@Row int,
    @Number int,
    @State int,
    @EventAreaId int
AS
    UPDATE EventSeats set State=@State
	where Id = @Id;')

SET IDENTITY_INSERT [dbo].[Venues] ON

INSERT INTO [dbo].[Venues] ([Id], [Description], [Address], [Phone], [Name]) VALUES (1, N'First venue', N'First venue address', N'123 45 678 90 12', N'first')

INSERT INTO [dbo].[Venues] ([Id], [Description], [Address], [Phone], [Name]) VALUES (2, N'Second venue', N'Second venue address', N'123 45 678 90 12', N'second')

SET IDENTITY_INSERT [dbo].[Venues] OFF

SET IDENTITY_INSERT [dbo].[Layouts] ON

INSERT INTO [dbo].[Layouts] ([Id], [VenueId], [Description], [Name]) VALUES (1, 1, N'First layout', N'first')

INSERT INTO [dbo].[Layouts] ([Id], [VenueId], [Description], [Name]) VALUES (2, 1, N'Second layout', N'second')

INSERT INTO [dbo].[Layouts] ([Id], [VenueId], [Description], [Name]) VALUES (3, 2, N'First layout', N'third')

INSERT INTO [dbo].[Layouts] ([Id], [VenueId], [Description], [Name]) VALUES (4, 2, N'Second layout', N'forth')

SET IDENTITY_INSERT [dbo].[Layouts] OFF

SET IDENTITY_INSERT [dbo].[Areas] ON

INSERT INTO [dbo].[Areas] ([Id], [LayoutId], [Description], [CoordX], [CoordY]) VALUES (1, 1, N'First area of first layout', 1, 1)

INSERT INTO [dbo].[Areas] ([Id], [LayoutId], [Description], [CoordX], [CoordY]) VALUES (2, 1, N'Second area of first layout', 2, 2)

INSERT INTO [dbo].[Areas] ([Id], [LayoutId], [Description], [CoordX], [CoordY]) VALUES (3, 2, N'First area of second layout', 3, 3)

INSERT INTO [dbo].[Areas] ([Id], [LayoutId], [Description], [CoordX], [CoordY]) VALUES (4, 2, N'Second area of second layout', 4, 4)

INSERT INTO [dbo].[Areas] ([Id], [LayoutId], [Description], [CoordX], [CoordY]) VALUES (5, 3, N'First area of third layout', 1, 1)

INSERT INTO [dbo].[Areas] ([Id], [LayoutId], [Description], [CoordX], [CoordY]) VALUES (6, 3, N'Second area of third layout', 2, 2)

INSERT INTO [dbo].[Areas] ([Id], [LayoutId], [Description], [CoordX], [CoordY]) VALUES (7, 4, N'First area of fourth layout', 3, 3)

INSERT INTO [dbo].[Areas] ([Id], [LayoutId], [Description], [CoordX], [CoordY]) VALUES (8, 4, N'Second area of fourth layout', 4, 4)

SET IDENTITY_INSERT [dbo].[Areas] OFF

SET IDENTITY_INSERT [dbo].[Seats] ON

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (1, 1, 1, 1)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (2, 1, 1, 2)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (3, 1, 1, 3)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (4, 1, 1, 4)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (5, 1, 1, 5)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (6, 2, 1, 1)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (7, 2, 1, 2)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (8, 2, 1, 3)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (9, 2, 1, 4)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (10, 2, 1, 5)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (11, 3, 1, 1)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (12, 3, 1, 2)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (13, 3, 1, 3)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (14, 3, 1, 4)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (15, 3, 1, 5)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (16, 4, 1, 1)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (17, 4, 1, 2)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (18, 4, 1, 3)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (19, 4, 1, 4)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (20, 4, 1, 5)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (21, 5, 1, 1)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (22, 5, 1, 2)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (23, 5, 1, 3)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (24, 5, 1, 4)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (4007, 5, 1, 5)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (4008, 6, 1, 1)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (4009, 6, 1, 2)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (4010, 6, 1, 3)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (4011, 6, 1, 4)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (4012, 6, 1, 5)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (4014, 7, 1, 1)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (4015, 7, 1, 2)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (4016, 7, 1, 3)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (4017, 7, 1, 4)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (4018, 7, 1, 5)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (4019, 8, 1, 1)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (4020, 8, 1, 2)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (4021, 8, 1, 3)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (4022, 8, 1, 4)

INSERT INTO [dbo].[Seats] ([Id], [AreaId], [Row], [Number]) VALUES (4023, 8, 1, 5)

SET IDENTITY_INSERT [dbo].[Seats] OFF

SET IDENTITY_INSERT [dbo].[Events] ON

INSERT INTO [dbo].[Events] ([Id], [Name], [Description], [LayoutId], [BeginDate], [EndDate]) VALUES (1, N'First event', N'First', 1, N'2025-12-12 12:00:00', N'2025-12-12 13:00:00')

INSERT INTO [dbo].[Events] ([Id], [Name], [Description], [LayoutId], [BeginDate], [EndDate]) VALUES (2, N'Second event', N'Second', 2, N'2025-12-12 13:00:00', N'2025-12-12 14:00:00')

SET IDENTITY_INSERT [dbo].[Events] OFF

SET IDENTITY_INSERT [dbo].[EventAreas] ON

INSERT INTO [dbo].[EventAreas] ([Id], [Description], [EventId], [CoordX], [CoordY], [Price]) VALUES (1, N'First area of first layout', 1, 1, 1, 100)

INSERT INTO [dbo].[EventAreas] ([Id], [Description], [EventId], [CoordX], [CoordY], [Price]) VALUES (2, N'Second area of first layout', 1, 1, 1, 100)

INSERT INTO [dbo].[EventAreas] ([Id], [Description], [EventId], [CoordX], [CoordY], [Price]) VALUES (3, N'First area of second layout', 2, 2, 2, 200)

INSERT INTO [dbo].[EventAreas] ([Id], [Description], [EventId], [CoordX], [CoordY], [Price]) VALUES (4, N'Second area of second layout', 2, 2, 2, 200)

SET IDENTITY_INSERT [dbo].[EventAreas] OFF

SET IDENTITY_INSERT [dbo].[EventSeats] ON

INSERT INTO [dbo].[EventSeats] ([Id], [State], [EventAreaId], [Row], [Number]) VALUES (1, 0, 1, 1, 1)

INSERT INTO [dbo].[EventSeats] ([Id], [State], [EventAreaId], [Row], [Number]) VALUES (2, 0, 1, 1, 2)

INSERT INTO [dbo].[EventSeats] ([Id], [State], [EventAreaId], [Row], [Number]) VALUES (3, 0, 1, 1, 3)

INSERT INTO [dbo].[EventSeats] ([Id], [State], [EventAreaId], [Row], [Number]) VALUES (4, 0, 1, 1, 4)

INSERT INTO [dbo].[EventSeats] ([Id], [State], [EventAreaId], [Row], [Number]) VALUES (5, 2, 1, 1, 5)

INSERT INTO [dbo].[EventSeats] ([Id], [State], [EventAreaId], [Row], [Number]) VALUES (6, 1, 2, 1, 1)

INSERT INTO [dbo].[EventSeats] ([Id], [State], [EventAreaId], [Row], [Number]) VALUES (7, 2, 2, 1, 2)

INSERT INTO [dbo].[EventSeats] ([Id], [State], [EventAreaId], [Row], [Number]) VALUES (8, 1, 2, 1, 3)

INSERT INTO [dbo].[EventSeats] ([Id], [State], [EventAreaId], [Row], [Number]) VALUES (9, 0, 2, 1, 4)

INSERT INTO [dbo].[EventSeats] ([Id], [State], [EventAreaId], [Row], [Number]) VALUES (10, 0, 2, 1, 5)

INSERT INTO [dbo].[EventSeats] ([Id], [State], [EventAreaId], [Row], [Number]) VALUES (11, 0, 3, 1, 1)

INSERT INTO [dbo].[EventSeats] ([Id], [State], [EventAreaId], [Row], [Number]) VALUES (12, 0, 3, 1, 2)

INSERT INTO [dbo].[EventSeats] ([Id], [State], [EventAreaId], [Row], [Number]) VALUES (13, 0, 3, 1, 3)

INSERT INTO [dbo].[EventSeats] ([Id], [State], [EventAreaId], [Row], [Number]) VALUES (14, 0, 3, 1, 4)

INSERT INTO [dbo].[EventSeats] ([Id], [State], [EventAreaId], [Row], [Number]) VALUES (15, 0, 3, 1, 5)

INSERT INTO [dbo].[EventSeats] ([Id], [State], [EventAreaId], [Row], [Number]) VALUES (16, 0, 4, 1, 1)

INSERT INTO [dbo].[EventSeats] ([Id], [State], [EventAreaId], [Row], [Number]) VALUES (17, 0, 4, 1, 2)

INSERT INTO [dbo].[EventSeats] ([Id], [State], [EventAreaId], [Row], [Number]) VALUES (18, 0, 4, 1, 3)

INSERT INTO [dbo].[EventSeats] ([Id], [State], [EventAreaId], [Row], [Number]) VALUES (19, 0, 4, 1, 4)

INSERT INTO [dbo].[EventSeats] ([Id], [State], [EventAreaId], [Row], [Number]) VALUES (20, 0, 4, 1, 5)

SET IDENTITY_INSERT [dbo].[EventSeats] OFF

USE [master]

ALTER DATABASE [TicketManagementTest] SET  READ_WRITE
